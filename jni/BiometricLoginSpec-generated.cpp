
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "BiometricLoginSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_BiometricIsAvailable(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "BiometricIsAvailable", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_BasicBiometricAuth(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "BasicBiometricAuth", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_LoginBiometricAuth(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "LoginBiometricAuth", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_SetUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "SetUser", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_UpdateUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "UpdateUser", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_GetUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "GetUser", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_DeleteUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "DeleteUser", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeBiometricLoginSpecJSI::NativeBiometricLoginSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["BiometricIsAvailable"] = MethodMetadata {0, __hostFunction_NativeBiometricLoginSpecJSI_BiometricIsAvailable};
  methodMap_["BasicBiometricAuth"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_BasicBiometricAuth};
  methodMap_["LoginBiometricAuth"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_LoginBiometricAuth};
  methodMap_["SetUser"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_SetUser};
  methodMap_["UpdateUser"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_UpdateUser};
  methodMap_["GetUser"] = MethodMetadata {0, __hostFunction_NativeBiometricLoginSpecJSI_GetUser};
  methodMap_["DeleteUser"] = MethodMetadata {0, __hostFunction_NativeBiometricLoginSpecJSI_DeleteUser};
}

std::shared_ptr<TurboModule> BiometricLoginSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "BiometricLogin") {
    return std::make_shared<NativeBiometricLoginSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react

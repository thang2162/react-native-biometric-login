/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "BiometricLoginSpec.h"


@implementation NativeBiometricLoginSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_BiometricIsAvailable(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "BiometricIsAvailable", @selector(BiometricIsAvailable:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_BasicBiometricAuth(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "BasicBiometricAuth", @selector(BasicBiometricAuth:desc:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_LoginBiometricAuth(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "LoginBiometricAuth", @selector(LoginBiometricAuth:desc:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_SetUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "SetUser", @selector(SetUser:password:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_UpdateUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "UpdateUser", @selector(UpdateUser:password:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_GetUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "GetUser", @selector(GetUser:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBiometricLoginSpecJSI_DeleteUser(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "DeleteUser", @selector(DeleteUser:reject:), args, count);
    }

  NativeBiometricLoginSpecJSI::NativeBiometricLoginSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["BiometricIsAvailable"] = MethodMetadata {0, __hostFunction_NativeBiometricLoginSpecJSI_BiometricIsAvailable};
        
        
        methodMap_["BasicBiometricAuth"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_BasicBiometricAuth};
        
        
        methodMap_["LoginBiometricAuth"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_LoginBiometricAuth};
        
        
        methodMap_["SetUser"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_SetUser};
        
        
        methodMap_["UpdateUser"] = MethodMetadata {2, __hostFunction_NativeBiometricLoginSpecJSI_UpdateUser};
        
        
        methodMap_["GetUser"] = MethodMetadata {0, __hostFunction_NativeBiometricLoginSpecJSI_GetUser};
        
        
        methodMap_["DeleteUser"] = MethodMetadata {0, __hostFunction_NativeBiometricLoginSpecJSI_DeleteUser};
        
  }
} // namespace facebook::react
